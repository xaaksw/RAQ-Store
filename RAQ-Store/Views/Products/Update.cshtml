@model RAQ_Store.ViewModels.ProductCategory

@{
    ViewBag.Title = "Update";
}


<div class="send-message">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="section-heading">
                    <h2>Update Product</h2>
                </div>
            </div>

            <div class="col-md-8">
                <div class="contact-form">
                    @using (Html.BeginForm("Update", "Products", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.HiddenFor(c => c.MyProduct.id)
                        @Html.AntiForgeryToken()
                        <form>
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12">

                                    <fieldset>
                                        @Html.LabelFor(model => model.MyProduct.image, htmlAttributes: new { @class = "control-label col-md-6" })
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="input-group mb-3">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text" style="background-color:#f33f3f;color:whitesmoke">Upload</span>
                                            </div>
                                            <div class="custom-file">
                                                <input type="file" class="custom-file-input" id="file" name="file">
                                                <label class="custom-file-label" for="file" style="color:#f33f3f">Choose file</label>
                                            </div>
                                        </div>
                                    </fieldset>

                                </div>

                                <div class="col-lg-12 col-md-12 col-sm-12">
                                    <fieldset>
                                        @Html.LabelFor(model => model.MyProduct.name, htmlAttributes: new { @class = "control-label col-md-6" })
                                        @Html.EditorFor(model => model.MyProduct.name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MyProduct.name, "", new { @class = "text-danger" })
                                    </fieldset>
                                </div>

                                <div class="col-lg-12 col-md-12 col-sm-12">
                                    <fieldset>
                                        @Html.LabelFor(model => model.MyProduct.price, htmlAttributes: new { @class = "control-label col-md-6" })

                                        @Html.EditorFor(model => model.MyProduct.price, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MyProduct.price, "", new { @class = "text-danger" })
                                    </fieldset>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12">
                                    <fieldset>
                                        @Html.LabelFor(model => model.MyProduct.category_id, htmlAttributes: new { @class = "control-label col-md-6" })

                                        @Html.DropDownListFor(model => model.MyProduct.category_id, new SelectList(Model.Category, "Id", "Name"), "Select Category", new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.MyProduct.category_id, "", new { @class = "text-danger" })
                                    </fieldset>
                                </div>

                                <div class="col-lg-12">
                                    <fieldset>
                                        <br />
                                        @Html.LabelFor(model => model.MyProduct.description, htmlAttributes: new { @class = "control-label col-md-6" })
                                        @Html.TextAreaFor(model => model.MyProduct.description, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.MyProduct.description, "", new { @class = "text-danger" })
                                    </fieldset>
                                </div>

                                <div class="col-lg-12">
                                    <fieldset>
                                        <button type="submit" value="Create" class="filled-button">Update Product</button>
                                    </fieldset>
                                </div>
                            </div>
                        </form>
                    }
                </div>
            </div>

        </div>
    </div>
</div>
